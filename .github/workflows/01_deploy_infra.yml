name: workspace deployment

on:
  workflow_dispatch:
    inputs:
      namePrefix:
        description: 'Name prefix for all resources'
        default: ''
        required: true
        type: string
      resourceGroup:
        description: 'Target resource group for deployment'
        default: ''
        required: true
        type: string
      synapseAdmin:
        description: 'ID of the synapse admin identity'
        default: ''
        required: true
        type: string
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Azure Login
      uses: Azure/login@v1.4.6
      with:
        creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
        enable-AzPSSession: true
        environment: azurecloud
        audience: api://AzureADTokenExchange
    - name: Checkout main branch
      uses: actions/checkout@v3
    - name: Deploy Azure Resource Manager (ARM) Template
      uses: Azure/arm-deploy@v1.0.9
      with:
        scope: resourcegroup
        resourceGroupName: ${{ inputs.resourceGroup }}
        template: iac/main.bicep
        deploymentMode: Incremental
        deploymentName: DeployRestAnalyticsQuickstartByFTA
        parameters: namePrefix=${{ inputs.namePrefix }}
    - name: Azure CLI Action
      uses: Azure/cli@v1.0.7
      with:
        inlineScript: >
          export ROLE_ID=$(az synapse role definition show --role "Synapse Administrator" --workspace-name ${{ inputs.namePrefix }}synapse --query id --output tsv) &&
          az synapse role assignment create --workspace-name ${{ inputs.namePrefix }}synapse --role $ROLE_ID --assignee ${{ inputs.synapseAdmin }} || true
    - name: Checkout workspace_publish branch
      uses: actions/checkout@v3
      with:
        ref: workspace_publish
    - name: Azure CLI Action
      uses: Azure/cli@v1.0.7
      with:
        inlineScript: >
          export CONNECTION_STRING=$(az storage account show-connection-string -g ${{ inputs.resourceGroup }} -n ${{ inputs.namePrefix }}storage --query connectionString -o tsv) &&
          echo -e "TableStorage_connectionString: $CONNECTION_STRING \n1_OpenAQ_Set_Up_Metadata_properties_parameters_StorageAccountName_defaultValue: ${{ inputs.namePrefix }}storage \n2_OpenAQ_Incremental_Load_properties_parameters_StorageAccountName_defaultValue: ${{ inputs.namePrefix }}storage \n3_OpenAQ_Sync_properties_parameters_StorageAccountName_defaultValue: ${{ inputs.namePrefix }}storage \n4_OpenAQ_Metadata_driven_properties_parameters_StorageAccountName_defaultValue: ${{ inputs.namePrefix }}storage \n5_OpenAQ_Cleanup_Location_properties_parameters_StorageAccountName_defaultValue: ${{ inputs.namePrefix }}storage \n6_OpenAQ_Full_Load_properties_parameters_StorageAccountName_defaultValue: ${{ inputs.namePrefix }}storage \n" >> parameters.yml
    - name: Synapse workspace deployment
      uses: Azure/Synapse-workspace-deployment@V1.7.0
      with:
        TargetWorkspaceName: ${{ inputs.namePrefix }}synapse
        clientId: ${{secrets.CLIENT_ID}}
        tenantId: ${{secrets.TENANT_ID}}
        clientSecret: ${{secrets.CLIENT_SECRET}}
        subscriptionId: ${{secrets.SUBSCRIPTION_ID}}
        TemplateFile: rasvjsynapse/TemplateForWorkspace.json
        ParametersFile: rasvjsynapse/TemplateParametersForWorkspace.json
        OverrideArmParameters: parameters.yml
        Environment: 'Azure Public'
        resourceGroup: ${{ inputs.resourceGroup }}
        DeleteArtifactsNotInTemplate: true
        deployManagedPrivateEndpoint: true
        operation: deploy
